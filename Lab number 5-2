//Библиотеки
#include <stdio.h>
#include <stdlib.h>
#include <time.h>



//Константы
//#define




int main() {  //Главная функция
    
    
    
    //Предустановки
    srand((unsigned int)time(NULL));  //Позволяет генерировать каждый раз "Новые" случайные числа
    
    
    
    //Объявление переменных, указателей и т.п.
    int m, n;  //Размерность матрицы "MxN", для ввода с клавиатуры
    
    double **a;  //Объявление указателя на "указатель" на строку элементов
    int i, j;  //Счётчики для прохода по матрице
    
    
    
    //Ввод размеронсти матрицы, с проверкой на корректный ввод
    printf("Введите количество строк: "); scanf("%d", &m);  //Ввод с клавиатуры кол-ва строк
    
    while (m < 1) {  //Условие на проверку размера строки
        
        if (m == 0) {  //Если равно "0"
            
            printf("Количество строк не может быть равно 0, повторите ввод: "); scanf("%d", &m);  //Ввод с клавиатуры кол-ва строк
            
        } else {  //Иначе, если отрицательное
            
            printf("Количесво строк не может быть отрицательным, повтрите ввод: "); scanf("%d", &m);  //Ввод с клавиатуры кол-ва строк
            
        }

    }
    
    /*while (m % 2 != 0) {  //Условие на проверку размера строки на чётность, для красоты вывода из условия задачи
        
        printf("Количество строк должно быть чётным, повторите попытку: "); scanf("%d", &m);  //Ввод с клавиатуры кол-ва строк
        
    }*/
    
    printf("Введите количество столбцов: "); scanf("%d", &n);  //Ввод с клавиатуры кол-ва столбцов
    
    while (n < 1) {  //Условие на проверку размера столбца
        
        if (n == 0) {  //Если равно "0"
            
            printf("Количество столбцов не может быть равно 0, повторите ввод: "); scanf("%d", &n);  //Ввод с клавиатуры кол-ва строк
            
        } else {  //Иначе, если отрицательное
            
            printf("Количесво столбцов не может быть отрицательным, повтрите ввод: "); scanf("%d", &n);  //Ввод с клавиатуры кол-ва строк
            
        }

    }
    
    /*while (n % 2 != 0) {  //Условие на проверку размера столбца на чётность, для красоты вывода из условия задачи
        
        printf("Количество столбцов должно быть чётным, повторите попытку: "); scanf("%d", &n);  //Ввод с клавиатуры кол-ва строк
        
    }
    
    while (n < m != 0) {  //Условие на проверку размерности между стр и стл
        
        printf("Кол-во столбцов не может быть меньше кол-ва строк, повторите попытку: "); scanf("%d", &n);  //Ввод с клавиатуры кол-ва строк
        
    }*/
   
    printf("\n\n");  //Отступ для красоты вывода в консоль между массивом и "Размерностью" матрицы
    
    
    
    //Обработка и заполнение матрицы, если m = n
    if (m == n) {
        
        a = (double**)malloc(m * sizeof(double*));  //Выделение памяти под указатели на строки
        
        for (i = 0; i < m; i++) {  //Проход по строкам
            
            a[i] = (double*)malloc(n * sizeof(double));  //Выделение памяти под хранение строк
            
            for (j = 0; j < n - i - 1; j++) {  //Проход по левой области
                
                a[i][j] = 0.7 + rand() % 9/1.2;  //Присвоение элементу матрицы случайного числа от 1 до 9
                printf("%5.1lf", a[i][j]);  //Вывод элемента матрицы в консоль + 5 знакомест под элемент массива
                
            }
            
            printf("     ");
            
            for (j = j; j < n - i; j++) {  //Проход по cредней линии
                
                a[i][j] = 0.9 + rand() % 8/1.8;  //Присвоение элементу матрицы случайного числа от 1 до 9
                printf("%5.1lf", a[i][j]);  //Вывод элемента матрицы в консоль + 5 знакомест под элемент массива
                
            }
            
            printf("     ");
            
            for (j = j; j < n; j++) {  //Проход правой области
                
                a[i][j] = 0.5 + rand() % 7/1.9;  //Присвоение элементу матрицы случайного числа от 1 до 9
                printf("%5.1lf", a[i][j]);  //Вывод элемента матрицы в консоль + 5 знакомест под элемент массива
                
            }
            
            printf("\n\n");  //Двойной отступ для симметричности вывода в консоль относительно "столбцов"
            
        }
        
        printf("\n");  //Отступ для красоты вывода в консоль
        
    }
    
    
    

    //Возвращаемое значение функции
    return 0;  //Вернуть 0
    
}
