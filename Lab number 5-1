#include <stdio.h>
#include <string.h>

#define N 100  //Ограничение в N символов

int LenString(char *pS) {  //Функция поиска длины строки
    
    int l = 0;  //Счёчтик для длины
    
    while (pS[l] != '\0') {  //Цикл на проход по всем символам
        
        l++;  //Прибавление "+1" с каждым новым символом
        
    }
    
    return l;  //Вернуть длину массива символов
    
}

int FindWords(char *pS, char s) {  //Функция поиска
    
    int i = 0;  //Счётчик пробелов
    
    while((pS = strchr(pS, s))) {  //"strchr" - подсчёт количества символов строки "pS" со значением 's'; Возвращает указатель на первое вхождение строки 's' в строку "pS"
        
        i++;  //Прибавлять '1' при нахождениее последующего указанного символа
        pS++;  //Переход к следующему символу через указатель
        
    }
    
    return i;  //Вернуть кол-во пробелов
    
}

char *ReturnMassivePointer(char *pS, char s, int w, int l) {  //Функция возврата массива указателей на 1 букву каждого слова
    
    int i = 1;  //Счётчик для заполнения массива
    int j;  //Счётчик для прохода по строке
    char *a[w];  //Объявление массива длинной "количества" слов
    
    a[0] = &pS[0];  //Так как в нормальны условия с пробела никто не начинает, то 0 символ сразу присваием к 0 эллементу массива
    
    for (j = 0; j < l; j++) {  //Проход по всем символам строки
        
        if (pS[j] == ' ') {  //Поиск пробела
            
            a[i] = &pS[j + 1];  //Присвоение адреса "через пробел" первого элемента слова
            i++;  //Упрощённый цикл for внутри
            
        }
        
    }
    
    return *a;  //Вернуть массив указателей
    
}


int main(int argc, const char * argv[]) {  //Главная функция
    
    char *pString = "qqq www eee rrr ttt";  //Объявление указателя с заданной строкой
    char string = ' ';  //Присвоение символа 'пробел' к переменной
    
    int i;  //Переменная для получения значения из фукнции RME
    int j;  //Счётчик для вывода указателей
    int t;  //Постоянная переменная после возврата
    int l;  //Длина строки
    
    l = LenString(pString);
    printf("длина строки: %d\n", l);
    
    i = FindWords(pString, string);  //Вызов функции
    t = i + 1;
    printf("Слов в строке: %d\n", t);  //Вывод результата на экран
    
    char *a[t];
    
    *a = ReturnMassivePointer(pString, string, i, l);  //Вызов функции
    printf("Массив указателей: [ ");  //Визуальное начало массива
    for (j = 0; j < t; j++) {
        
        printf("%p ", a[j]);  //Вывод каждого элемента
        
    }
    printf("]\n");  //Визуальный конец массива
    
    return 0;  //Вернуть 0
    
}
