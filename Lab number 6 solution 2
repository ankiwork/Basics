#include <iostream>

using namespace std;

struct Student {
    char surname[40];
    char name[40];
    char group[10];
    int  number;
};

int InitializingBasicStudents(Student* stud) {
    int i = 0;
    //1
    strcpy_s(stud[i].surname, "Thomas");
    strcpy_s(stud[i].name, "John");
    strcpy_s(stud[i].group, "IVT");
    stud[i].number = 11;
    i++;
    //2
    strcpy_s(stud[i].surname, "Taylor");
    strcpy_s(stud[i].name, "Michael");
    strcpy_s(stud[i].group, "IVT");
    stud[i].number = 11;
    i++;
    //3
    strcpy_s(stud[i].surname, "Swanson");
    strcpy_s(stud[i].name, "Bradley");
    strcpy_s(stud[i].group, "IVT");
    stud[i].number = 12;
    i++;
    //4
    strcpy_s(stud[i].surname, "Stewart");
    strcpy_s(stud[i].name, "Jeffrey");
    strcpy_s(stud[i].group, "IVT");
    stud[i].number = 12;
    i++;
    //5
    strcpy_s(stud[i].surname, "Evans");
    strcpy_s(stud[i].name, "Kenneth");
    strcpy_s(stud[i].group, "PIN");
    stud[i].number = 13;
    i++;
    //6
    strcpy_s(stud[i].surname, "Welch");
    strcpy_s(stud[i].name, "Howard");
    strcpy_s(stud[i].group, "PIN");
    stud[i].number = 13;
    i++;
    //7
    strcpy_s(stud[i].surname, "Burke");
    strcpy_s(stud[i].name, "Adam");
    strcpy_s(stud[i].group, "PIN");
    stud[i].number = 14;
    i++;
    //8
    strcpy_s(stud[i].surname, "Swanson");
    strcpy_s(stud[i].name, "Bradley");
    strcpy_s(stud[i].group, "PIN");
    stud[i].number = 14;
    i++;

    return i;
}

int AddingNewStudent(Student* stud, int i) {
    cout << "Студент номер " << i + 1 << endl;
    //i + 1
    cout << "Фамилия: "; cin >> stud[i].surname;
    cout << "Фамилия: "; cin >> stud[i].name;
    cout << "Фамилия: "; cin >> stud[i].group;
    cout << "Фамилия: "; cin >> stud[i].number;
    i++;
    return i;
}

void OutputtingInformationTable(Student* stud) {
    int number = 0;
    cout << "--------------------------" << endl;
    cout << "Введите номер студента: "; cin >> number;
    cout << "--------------------------" << endl;
    cout << "Фамилия     |" << stud[number - 1].surname << endl;
    cout << "Имя         |" << stud[number - 1].name << endl;
    cout << "Группа      |" << stud[number - 1].group << endl;
    cout << "Номер группы|" << stud[number - 1].number << endl;
    cout << "--------------------------" << endl;
}

void DetermineDirectionPreparation(Student* stud, int number) {
    char group[10];
    cout << "Введите группу: "; cin >> group; cout << endl;
    for (int i = 0; i < number; i++) {
        if (strcmp(group, stud[i].group) == 0) {
            cout << "Студент номер: " << i + 1 << endl;
            cout << "Фамилия:       " << stud[i].surname << endl;
            cout << "Имя:           " << stud[i].name << endl;
            cout << "Группа:        " << stud[i].group << endl;
            cout << "Номер группы:  " << stud[i].number << endl << endl;
        }
    }
}

void DetermineDirectionPreparationNumber(Student* stud, int number) {
    char group[10];
    cout << "Введите группу: "; cin >> group;
    int number1 = 0;
    cout << "Введите номер группы: "; cin >> number1; cout << endl;
    for (int i = 0; i < number; i++) {
        if ((group == stud[i].group) && (number1 == stud[i].number)) {
            cout << "Студент номер: " << i + 1 << endl;
            cout << "Фамилия:       " << stud[i].surname << endl;
            cout << "Имя:           " << stud[i].name << endl;
            cout << "Группа:        " << stud[i].group << endl;
            cout << "Номер группы:  " << stud[i].number << endl;
        }
    }
}

int WorkingWithTheUser(Student* stud, int size, int number) {
    int client = NULL;
    while (client != 1) {
        /*
        * Вывод/Ввод информации, для реализации ниже
        */
        cout << "Закончить операцию                                            - [1]" << endl;
        cout << "Добавить информацию о новом студенте                          - [2]" << endl;
        cout << "Распечатать информацию о студенте в табличном виде            - [3]" << endl;
        cout << "Определить всех студентов по заданному направлению подготовки - [4]" << endl;
        cout << "Определить всех студентов заданной группе и номеру группы     - [5]" << endl;
        cout << "Введите номер операции: ";
        cin >> client;
        system("cls");
        /*
        * Блок с операциями
        */
        switch (client) {
            case 1: {
                break;
            }
            case 2: {
                number = AddingNewStudent(stud, number);
                system("cls");
                break;
            }
            case 3: {
                OutputtingInformationTable(stud);
                break;
            }
            case 4: {
                DetermineDirectionPreparation(stud, number);
                break;
            }
            case 5: {
                DetermineDirectionPreparationNumber(stud, number);
                break;
            }
        }
    }
    return number;
}

int main() {
    //
    setlocale(LC_ALL, "Russian");
    /*
    * Объявление структуры внутри main и начальное задание условий
    */
    const int size = 100;
    Student* stud = new Student[size];
    int number = InitializingBasicStudents(stud);  //Инициализируем "вручную" первые 8 студентов из условия задачи
    /*
    * Работа с пользователем(Реализация операций из условия)
    */
    WorkingWithTheUser(stud, size, number);
}
