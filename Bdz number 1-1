//Библиотеки
#include <stdio.h>
#include <stdlib.h>
#include <time.h>



//Константы
#define M 10  //Произвольный массив длинной "M"




//Начало функции поиска последнего положительного числа(Индекса) массива
int *FindMaxLast(int a[M]) {  //Вспомогательная функция
    
    
    
    //Объявление переменных, указателей и т.п.
    int i;  //Счёчтик для прохода по массиву
    int *ret = 0;  //Возвращаемое значение вспомогательной функции
    
    
    
    //Основной код(поиск максимального значения)
    for (i = 0; i < M; i++) {  //Проход по массиву(Инверсия)
        
        if (a[i] < 0) {  //Проверка на отрицательность
            
            ret = &a[i];  //Присвоить переменной индекс последнего положительного значения
            break;  //Прервать этот барабан, ибо зачем оно дальше надо
            
        }
        
    }
    
    
    //Возвращаемое значение функции
    return ret;  //Вернуть значение(Индекс)
    
}


//Начало главной функции
int main() {  //Главная функция
    
    
    
    //Предустановки
    srand((unsigned int)time(NULL));  //Позволяет генерировать каждый раз "Новые" случайные числа
    
    
    
    //Объявление переменных, указателей и т.п.
    int a[M];  //Объявление массива
    int i;  //Счёчтик для прохода по массиву
    int *ret;  //Возвращаемое значение вспомогательной функции "ret" - "return"
    
    
    
    //Основной код(Задание массива)
    printf("Массив: [ ");  //Визуальное начало массива
    for (i = 0; i < M; i++) {  //Проход по массиву
        
        a[i] = 1 + rand() % 19 - 10;  //Генерация случайного числа для "Отдельного элемента массива"
        printf("%d ", a[i]);
        
    }
    printf("]\n\n");  //Визуальное закрытие массива + перенос + отделение для нового вывода
    
    
    
    //Вызов функции
    ret = FindMaxLast(a);  //Вызов вспомогательной функции + передать массив "а"
    
    
    
    //Основной код(Вывод в консоль индекса)
    printf("Индекс последнего положительного элемента: %p\n\n", &ret);  //Вывод + отступ для красоты
    

    //Возвращаемое значение функции
    return 0;  //Вернуть 0
    
}

